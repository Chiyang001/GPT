const greetings = [
    "‰∏≠Áßã‰Ω≥ËäÇÔºåÂõ¢ÂúÜÂπ∏Á¶èÔºÅ",
    "ÊòéÊúàÁöéÁöéÔºå‰∏≠ÁßãÂø´‰πêÔºÅ",
    "Âõ¢ÂúÜÁöÑÊó∂ÂàªÔºåÂπ∏Á¶èÁöÑÊó∂ÂàªÔºå‰∏≠ÁßãËäÇÂø´‰πêÔºÅ",
    "ÊúàÂúÜ‰∫∫Âõ¢ÂúÜÔºå‰∏≠ÁßãËäÇÁ•ùÁ¶è‰Ω†Âø´‰πêÂÆâÂ∫∑ÔºÅ",
    "ÂêâÁ••Â¶ÇÊÑèÔºåÂπ∏Á¶èÁæéÊª°Ôºå‰∏≠ÁßãÂø´‰πêÔºÅ",
    "Ê¨¢Â∫¶‰∏≠ÁßãÔºåÂπ∏Á¶è‰∏é‰Ω†ÂêåÂú®„ÄÇ",
    "ÊúàÂà∞ÊòØÁßãÂàÜÂ§ñÊòéÔºåÂèàÊòØ‰∏ÄÂπ¥Âõ¢ÂúÜÊó∂„ÄÇ",
    "‰∏≠Áßã‰πãÂ§úÔºåÊúàÊòéÊòüÁ®ÄÔºå‰∫∫Âõ¢ÂÆ∂ÂúÜÔºåÂπ∏Á¶èÁæéÊª°„ÄÇ",
    "ÂúÜÂúÜÁöÑÊúàÂÑøÁöéÊ¥ÅÊ∏Ö‰∫ÆÔºåÂõ¢Âõ¢ÁöÑ‰Ω†ÊàëÂπ∏Á¶èÊ¨¢Á¨ë„ÄÇ",
    "ÂÆ∂Â∫≠Âπ∏Á¶èÂèàÂπ≥ÂÆâÔºåÂπ∏Á¶èÁæéÊª°ÊÉÖÊõ¥Êµì„ÄÇ",
    "Â∫Ü‰∏≠ÁßãÔºåËÅöÂ§©‰º¶ÔºåÂêÉÊúàÈ•ºÔºåÂìÅÁæéÈÖíÔºåÂõ¢Âõ¢ÂúÜÂúÜÊõ¥Âπ∏Á¶è„ÄÇ",
    "ÊúàÂúÜÔºå‰∫∫Êõ¥ÂúÜÔºå‰∏≠Áßã‰Ω≥ËäÇÔºåÂπ∏Á¶èÂõ¢ÂúÜ„ÄÇ",
    "ÊòéÊúàÂ¶ÇÈïúÔºåÂõ¢ÂúÜÂ¶ÇÊÑèÔºåÊÑø‰Ω†‰∏≠ÁßãÂø´‰πêÔºåÂπ∏Á¶èÊ∞∏Ëøú„ÄÇ",
    "‰∏≠Áßã‰πãÂ§úÔºåÂõ¢ÂúÜ‰πãÂ§úÔºåÊÑøÂπ∏Á¶è‰∏é‰Ω†ÂêåÂú®„ÄÇ",
    "ÁßãÊ∞¥ÂÖ±ÈïøÂ§©‰∏ÄËâ≤Ôºå‰∫∫Èó¥ÊúâÊÉÖÊúÄÁâµÁªä„ÄÇ‰∏≠ÁßãÂõ¢ÂúÜÁæéÂ¶ÇÁîªÔºåÂπ∏Á¶èÂπ≥ÂÆâÂÑøÂ•≥ÊÉÖ„ÄÇ",
    "ÊúàÂà∞ÊòØÁßãÂàÜÂ§ñÊòéÔºåÂèàÊòØ‰∏ÄÂπ¥Âõ¢ÂúÜÊó∂„ÄÇÊÑø‰Ω†‰∏≠ÁßãÂø´‰πêÔºåÂπ∏Á¶èÁæéÊª°„ÄÇ",
    "‰∏ÄËΩÆÊòéÊúàÈÄÅÊù•Âπ∏Á¶èÔºå‰∏ÄÁºïÊ∏ÖÈ£éÂØÑÂéªÈóÆÂÄô„ÄÇ‰∏≠ÁßãËäÇÁ•ùÁ¶è‰Ω†ÔºåÂπ∏Á¶èÂÆâÂ∫∑Â§öÂ§ö„ÄÇ",
    "‰∏≠Áßã‰Ω≥ËäÇÔºåÂÆ∂Â∫≠Âõ¢ÂúÜÔºåÂπ∏Á¶èÁæéÊª°„ÄÇ",
    "ÊòéÊúàÂçÉÈáåÂØÑÁõ∏ÊÄùÔºåÂõ¢ÂúÜ‰∏≠ÁßãÂÄçÊÄù‰∫≤„ÄÇ",
    "‰∏≠ÁßãÁ•ùÁ¶èÔºöÊúàÂúÜ‰∫∫Êõ¥ÂúÜÔºåÂõ¢ÂúÜÂπ∏Á¶è‰∏ÄËæàÂ≠ê„ÄÇ",
    "ÊÑø‰Ω†‰∏≠Áßã‰Ω≥ËäÇÔºåÂπ∏Á¶èÁæéÊª°ÔºåÂõ¢ÂúÜÂø´‰πêÔºå‰∫ã‰∫ãÈ°∫ÂøÉ„ÄÇ",
    "Á•ùÊÑø‰∏≠ÁßãËäÇÔºåÂõ¢Âõ¢ÂúÜÂúÜÔºåÁæéÊª°Âπ∏Á¶èÔºåÂÆ∂Â∫≠ÂíåÁù¶„ÄÇ",
    "‰∏≠Áßã‰Ω≥ËäÇÂà∞‰∫ÜÔºåÁ•ù‰Ω†Âõ¢Âõ¢ÂúÜÂúÜÔºåÂπ∏Á¶èÁæéÊª°„ÄÇ",
    "ÊúàÂúÜÊÉÖÊõ¥ÂúÜÔºå‰∏≠Áßã‰Ω≥ËäÇÂõ¢ÂúÜÊó∂„ÄÇ",
    "‰∏≠ÁßãËäÇÔºåÊÑø‰Ω†‰∫ã‰∫ãÂ¶ÇÊÑèÔºåÂπ∏Á¶èÁæéÊª°„ÄÇ",
    "ÊÑø‰Ω†‰∏≠ÁßãÂπ∏Á¶èÁæéÊª°ÔºåÂø´‰πêÊó†ËæπÔºåÂõ¢Âõ¢ÂúÜÂúÜ„ÄÇ",
    "‰∏≠Áßã‰πãÂ§úÔºåÊòéÊúàÂÖ±Á•ùÁ¶èÔºåÂπ∏Á¶èÁæéÊª°„ÄÇ",
    "ÊúàÂà∞‰∏≠ÁßãÂàÜÂ§ñÊòéÔºå‰∫∫Âõ¢ÂÆ∂ÂúÜÁ¨ëÂºÄÈ¢ú„ÄÇ",
    "‰∏≠Áßã‰Ω≥ËäÇÔºåÁæéÊª°Âõ¢ÂúÜÔºåÂπ∏Á¶èÂÆâÂ∫∑„ÄÇ",
    "Âõ¢Âõ¢ÂúÜÂúÜ‰∏≠ÁßãËäÇÔºåÁæéÊª°Âπ∏Á¶èÊ≠•Ê≠•È´ò„ÄÇ",
    "ÊúàÂÑøÂúÜÂúÜÊª°Êª°Âπ∏Á¶èÂõ¢ÔºåÊÑø‰Ω†Âπ∏Á¶è‰πÖ‰πÖÈïø„ÄÇ",
    "ÂúÜÂúÜÁöÑÊúàÂÑøÁöéÊ¥ÅÊòéÔºåÂõ¢Âõ¢ÁöÑ‰Ω†ÊàëÊÉÖÊõ¥Ê∑±„ÄÇ",
    "‰∏≠Áßã‰Ω≥ËäÇÔºåÂõ¢Âõ¢ÂúÜÂúÜÔºåÂπ∏Á¶èÁæéÊª°„ÄÇ",
    "Á•ù‰∏≠ÁßãËäÇÂø´‰πêÔºåÂõ¢Âõ¢ÂúÜÂúÜÔºåÂπ∏Á¶èÁæéÊª°„ÄÇ",
    "‰∏≠ÁßãÂ§úÔºåÊúàÊòéÊòüÁ®ÄÔºåÂõ¢ÂúÜÂπ∏Á¶èÊó†ÊØî„ÄÇ",
    "‰∏≠Áßã‰Ω≥ËäÇÔºåÊÑø‰Ω†Âπ∏Á¶èÂÆâÂ∫∑ÔºåÂõ¢Âõ¢ÂúÜÂúÜ„ÄÇ",
    "ÂúÜÊúàÂúÜÂúÜÔºåÂõ¢Âõ¢ÂúÜÂúÜÔºåÂπ∏Á¶èÂõ¥ÁªïÔºåÁ¨ëÂÆπÂ∏∏È©ª„ÄÇ",
    "ÊòéÊúàÈ´òÊåÇ‰∏≠ÁßãÂ§úÔºåÁæéÊª°Âπ∏Á¶èÊó†ËæπÁïå„ÄÇ",
    "‰∏≠Áßã‰Ω≥ËäÇÔºåÂÆ∂‰∫∫Âõ¢ËÅöÔºåÂπ∏Á¶èÊª°Êª°„ÄÇ",
    "Áæé‰∏ΩÁöÑ‰∏≠ÁßãÂ§úÔºåÂπ∏Á¶èÁöÑÂõ¢ÂúÜÂ§ú„ÄÇ",
    "‰∏≠ÁßãÂõ¢ÂúÜÁöÑÊó∂ÂàªÔºåÂπ∏Á¶èÁæéÊª°ÁöÑÊó∂Âàª„ÄÇ",
    "‰∏≠Áßã‰Ω≥ËäÇÔºåÁ•ù‰Ω†Âõ¢Âõ¢ÂúÜÂúÜÔºåÂπ∏Á¶èÊª°Êª°„ÄÇ",
    "‰∏≠Áßã‰πãÂ§úÔºåÂõ¢Âõ¢ÂúÜÂúÜÔºåÂπ∏Á¶èÁîúËúú„ÄÇ",
    "ÊúàÂúÜ‰∫∫Âõ¢ÂúÜÔºåÂπ∏Á¶èÁæéÊª°„ÄÇ",
    "‰∏≠ÁßãÂ§úÔºåÂõ¢Âõ¢ÂúÜÂúÜÔºåÂπ∏Á¶èÊó†Èôê„ÄÇ",
    "‰∏≠Áßã‰Ω≥ËäÇÔºåÊÑø‰Ω†Âπ∏Á¶èÂ¶ÇÊÑèÔºåÂõ¢Âõ¢ÂúÜÂúÜ„ÄÇ",
    "ÊúàÂúÜ‰∫∫Êõ¥ÂúÜÔºå‰∏≠ÁßãÂõ¢ÂúÜÊõ¥Âπ∏Á¶è„ÄÇ",
    "‰∏≠Áßã‰πãÂ§úÔºåÂõ¢Âõ¢ÂúÜÂúÜÔºåÂπ∏Á¶èÊó†Ëæπ„ÄÇ",
    "‰∏≠Áßã‰Ω≥ËäÇÔºåÊÑø‰Ω†Âπ∏Á¶èÁæéÊª°ÔºåÂõ¢Âõ¢ÂúÜÂúÜ„ÄÇ",
    "ÊòéÊúàÂ¶ÇÈïúÔºåÂõ¢ÂúÜÂπ∏Á¶è„ÄÇ",
    "‰∏≠Áßã‰Ω≥ËäÇÔºåÂÆ∂‰∫∫Âõ¢ËÅöÔºåÂπ∏Á¶èÊª°Êª°„ÄÇ",
    "ÊúàÂúÜ‰∫∫Âõ¢ÂúÜÔºåÂπ∏Á¶èÁæéÊª°„ÄÇ",
    "‰∏≠Áßã‰πãÂ§úÔºåÂõ¢Âõ¢ÂúÜÂúÜÔºåÂπ∏Á¶èÁîúËúú„ÄÇ",
    "‰∏≠Áßã‰Ω≥ËäÇÔºåÁ•ù‰Ω†Âõ¢Âõ¢ÂúÜÂúÜÔºåÂπ∏Á¶èÁæéÊª°„ÄÇ"
];

const greetingElement = document.getElementById("greeting");
const generateButton = document.getElementById("generate-button");

generateButton.addEventListener("click", () => {
    const randomIndex = Math.floor(Math.random() * greetings.length);
    const randomGreeting = greetings[randomIndex];
    greetingElement.textContent = randomGreeting;
});
        
const numberOfMooncakes = 10;  /* Adjusted the number of mooncakes */
  for (let i = 0; i < numberOfMooncakes; i++) {
    const mooncake = document.createElement('div');
    mooncake.textContent = 'üá®üá≥';
    mooncake.className = 'mooncake';
    mooncake.style.left = Math.random() * 100 + 'vw';
    mooncake.style.animationDuration = Math.random() * 5 + 5 + 's';
    mooncake.style.animationDelay = Math.random() * 2 + 's';
    document.body.appendChild(mooncake);
  }
                
    // Ê£ÄÊµãËÆæÂ§áÁ±ªÂûã
    function detectDeviceType() {
      if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
        return 'phone';
      } else {
        return 'other';
      }
    }



    // È°µÈù¢Âä†ËΩΩÊó∂Ê†πÊçÆËÆæÂ§áÁ±ªÂûãË∑≥ËΩ¨
    window.onload = function() {
      var deviceType = detectDeviceType();
      if (deviceType === 'phone') {
        window.location.href = 'phone.html';
      }
    };

        window.onload = function() {
    setTimeout(() => {
        animateTitle();
        displayUptime();
        setInterval(displayUptime, 1000); // ÊØèÁßíÊõ¥Êñ∞‰∏ÄÊ¨°ËøêË°åÊó∂Èó¥
    }, 1000); // Á≠âÂæÖ1ÁßíÂêéÂºÄÂßãÊ†áÈ¢òÂä®ÁîªÂíåËøêË°åÊó∂Èó¥ÊòæÁ§∫
};

function animateTitle() {
    const title = document.getElementById('title');
    const titleText = "ChatGPTHub";
    const cursor = document.createElement('span');
    cursor.id = 'cursor';
    cursor.textContent = '|';
    let cursorVisible = true;

    title.textContent = ''; // Clear the title initially

    setInterval(() => {
        if (cursorVisible) {
            cursor.style.opacity = '0';
            cursorVisible = false;
        } else {
            cursor.style.opacity = '1';
            cursorVisible = true;
        }
    }, 500); // Toggle cursor visibility every 500ms

    let currentTitle = '';
    let currentIndexTitle = 0;

    const typingInterval = setInterval(() => {
        currentTitle += titleText[currentIndexTitle];
        title.textContent = currentTitle;
        title.appendChild(cursor); // Append the cursor

        currentIndexTitle++;

        if (currentIndexTitle >= titleText.length) {
            clearInterval(typingInterval);
            title.removeChild(cursor); // Remove the cursor after typing is done

            // Start subtitle animation after title animation finishes
            setTimeout(animateSubtitle, 500); // Delay before starting subtitle animation
        }
    }, 100); // Type a character every 100ms
}

function animateSubtitle() {
    const subtitle = document.getElementById('subtitle');
    const subtitleText = "Á¢ßË°ÄÊ∂åÂÖÆÁü•ËØÜÊ∫êÔºåÁæΩÁøº‰∏∞ÁõàÂàõÊñ∞ÊΩÆ„ÄÇËÅöÊÖßÁªìÂøÉÂÖçË¥πËàûÔºåÊãÇÂ∞òÊâ¨Ëµ∑Êô∫ÊÖßÊ°•„ÄÇ";
    const cursor = document.createElement('span');
    cursor.id = 'cursor';
    cursor.textContent = '|';
    let cursorVisible = true;

    subtitle.textContent = ''; // Clear the subtitle initially

    setInterval(() => {
        if (cursorVisible) {
            cursor.style.opacity = '0';
            cursorVisible = false;
        } else {
            cursor.style.opacity = '1';
            cursorVisible = true;
        }
    }, 500); // Toggle cursor visibility every 500ms

    let currentSubtitle = '';
    let currentIndexSubtitle = 0;

    const typingInterval = setInterval(() => {
        currentSubtitle += subtitleText[currentIndexSubtitle];
        subtitle.textContent = currentSubtitle;
        subtitle.appendChild(cursor); // Append the cursor

        currentIndexSubtitle++;

        if (currentIndexSubtitle >= subtitleText.length) {
            clearInterval(typingInterval);
            subtitle.removeChild(cursor); // Remove the cursor after typing is done
        }
    }, 100); // Type a character every 100ms
}






       function toggleCategory(categoryId) {
    const categories = document.querySelectorAll('.category');
    const buttons = document.querySelectorAll('.category-button');
    categories.forEach((cat) => {
        if (cat.id === categoryId) {
            cat.style.display = 'block';
            setTimeout(() => {
                cat.style.opacity = '1';
                cat.style.transform = 'translateY(0)';
            }, 50);
        } else {
            cat.style.opacity = '0';
            cat.style.transform = 'translateY(20px)';
            setTimeout(() => {
                cat.style.display = 'none';
            }, 500);
        }
    });
    buttons.forEach((btn) => {
        if (btn.classList.contains('active')) {
            btn.classList.remove('active');
        }
    });
    const button = document.querySelector(`#${categoryId}-button`);
    button.classList.add('active');
}



        function displayUptime() {
    const startTime = new Date(Date.UTC(2023, 7, 14, 3, 30)); // Âåó‰∫¨Êó∂Èó¥Êç¢ÁÆó‰∏∫ UTC
    const currentTime = new Date();
    const uptimeMillis = currentTime - startTime;

    const milliseconds = uptimeMillis % 1000;
    const seconds = Math.floor((uptimeMillis / 1000) % 60);
    const minutes = Math.floor((uptimeMillis / (1000 * 60)) % 60);
    const hours = Math.floor((uptimeMillis / (1000 * 60 * 60)) % 24);
    const days = Math.floor(uptimeMillis / (1000 * 60 * 60 * 24));

    const uptimeElement = document.getElementById('uptime-value');
    uptimeElement.textContent = `${days} Â§©, ${hours} Â∞èÊó∂, ${minutes} ÂàÜÈíü, ${seconds} Áßí, ${milliseconds} ÊØ´Áßí`;
}

// Âú® window.onload ÂáΩÊï∞‰∏≠‰ΩøÁî®‰ª•‰∏ã‰ª£Á†ÅË∞ÉÁî® displayUptime ÂáΩÊï∞
setInterval(displayUptime, 1); // ÊØèÊØ´ÁßíÊõ¥Êñ∞‰∏ÄÊ¨°ËÆ°Êó∂Âô®

//ÁÇπÂáªÊåâÈíÆËá™Âä®‰ªéÈ°∂ÈÉ®‰∏ãÊªë‰∏ÄÊÆµË∑ùÁ¶ª
        function scrollToContent() {
    window.scrollTo({
        top: 800, // ÊªöÂä®ÁöÑÁõÆÊ†á‰ΩçÁΩÆÔºåËøôÈáåËÆæÁΩÆ‰∏∫800px
        behavior: 'smooth' // Âπ≥ÊªëÊªöÂä®ÊïàÊûú
    });
}
// Ëøô‰∏™ÊòØÈ∏£Ë∞¢ÂêçÂçïÊªöÂä®‰ª£Á†Å
const scrollToTopButton = document.getElementById('scrollToTop');

scrollToTopButton.addEventListener('click', () => {
  window.scrollTo({
    top: 0,
    behavior: 'smooth'
  });
});

//Ëøô‰∏™ÊòØ‰∏ªÈ¢òËÆæÁΩÆ‰ª£Á†Å
document.addEventListener("DOMContentLoaded", function() {
    const themeButton = document.getElementById("themeButton");
    const themeModal = document.getElementById("themeModal");
    const defaultThemeButton = document.getElementById("defaultThemeButton");
    const purpleThemeButton = document.getElementById("purpleThemeButton");
    const autumnThemeButton = document.getElementById("autumnThemeButton");
    const backgroundElement = document.querySelector(".background-video");
    const toolCards = document.querySelectorAll(".tool-card");

    let currentTheme = ''; // Track the current theme

    themeButton.addEventListener("click", function() {
        themeModal.style.display = "block";
    });

    defaultThemeButton.addEventListener("click", function() {
        themeModal.style.display = "none";
        setDefaultTheme();
    });

    purpleThemeButton.addEventListener("click", function() {
        themeModal.style.display = "none";
        setPurpleTheme();
    });

    autumnThemeButton.addEventListener("click", function() {
        themeModal.style.display = "none";
        setAutumnTheme();
    });

    function setDefaultTheme() {
        setBackgroundImage("black.jpg"); // Replace with your image URL
        resetToolCards();
        currentTheme = 'default';
    }

    function setPurpleTheme() {
        setBackgroundVideo("https://gitcode.net/qq_37688711/gpt/-/raw/main/background.mp4?inline=false");
        setPurpleToolCards();
        currentTheme = 'purple';
    }

    function setAutumnTheme() {
        setBackgroundVideo("https://gitcode.net/qq_37688711/gpt/-/raw/main/autumn.mp4?inline=false");
        setAutumnToolCards();
        currentTheme = 'autumn';
    }

    function setBackgroundVideo(videoSource) {
        backgroundElement.style.backgroundImage = "none"; // Remove any background image
        backgroundElement.src = videoSource; 
    }

    function setBackgroundImage(imageSource) {
        backgroundElement.src = ""; // Remove the video source
        backgroundElement.style.backgroundImage = `url(${imageSource})`;
        backgroundElement.style.backgroundSize = "cover"; // Cover the entire element
        backgroundElement.style.backgroundPosition = "center"; // Center the image
        backgroundElement.style.backgroundRepeat = "no-repeat"; // Don't repeat the image
    }

    function resetToolCards() {
        toolCards.forEach(card => {
            card.style.animation = "none";
            card.style.boxShadow = "none";
            card.style.backgroundColor = "#303030";
            card.style.border = "1px solid #444444";
        });
    }

    function setPurpleToolCards() {
        toolCards.forEach(card => {
            card.style.animation = "glow 1s infinite alternate";
            card.style.boxShadow = "0 0 30px blue";
            card.style.backgroundColor = "#303030";
            card.style.border = "1px solid #444444";
        });
    }

    function setAutumnToolCards() {
        toolCards.forEach(card => {
            card.style.animation = "none";
            card.style.boxShadow = "0 0 10px yellow";
            card.style.backgroundColor = "#b34f1d";
            card.style.border = "2px solid yellow";
        });
    }

    // Set default theme on website load
    setDefaultTheme();
});


// ÂàùÂßãÂåñÊî∂ËóèÂ§πÊï∞ÊçÆ
var favorites = [];

// Ëé∑ÂèñÊú¨Âú∞Â≠òÂÇ®ÁöÑÊî∂ËóèÂ§πÊï∞ÊçÆ
if (localStorage.getItem("favorites")) {
    favorites = JSON.parse(localStorage.getItem("favorites"));
}

// ÂàáÊç¢Êî∂ËóèÁä∂ÊÄÅ
function toggleFavorite(element) {
    var toolCard = element.parentElement;
    var toolName = toolCard.querySelector("h3").textContent;
    var toolURL = toolCard.querySelector("a").href;

    // Ê£ÄÊü•ÊòØÂê¶Â∑≤ÁªèÂú®Êî∂ËóèÂ§π‰∏≠
    var isFavorite = favorites.some(function(item) {
        return item.name === toolName && item.url === toolURL;
    });

    if (isFavorite) {
        // ‰ªéÊî∂ËóèÂ§π‰∏≠ÁßªÈô§
        favorites = favorites.filter(function(item) {
            return !(item.name === toolName && item.url === toolURL);
        });
        element.textContent = "‚òÜ";
        alert("Â∑≤ÂèñÊ∂àÊî∂ËóèÔºÅ");
    } else {
        // Ê∑ªÂä†Âà∞Êî∂ËóèÂ§π
        favorites.push({ name: toolName, url: toolURL });
        element.textContent = "‚òÖ";
        alert("Â∑≤ÊàêÂäüÊ∑ªÂä†Âà∞Êî∂ËóèÂ§πÔºÅ");
    }

    // Êõ¥Êñ∞Êú¨Âú∞Â≠òÂÇ®
    localStorage.setItem("favorites", JSON.stringify(favorites));
    updateFavoritesList();
}

// Êõ¥Êñ∞Êî∂ËóèÂ§πÂàóË°®
function updateFavoritesList() {
    var favoriteList = document.getElementById("favoriteList");
    favoriteList.innerHTML = "";

    if (favorites.length === 0) {
        favoriteList.innerHTML = "<p>ÊÇ®ÁöÑÊî∂ËóèÂ§π‰∏∫Á©∫„ÄÇ</p>";
    } else {
        favorites.forEach(function(item) {
            var listItem = document.createElement("li");
            listItem.innerHTML = '<a href="' + item.url + '">' + item.name + '</a>';
            favoriteList.appendChild(listItem);
        });
    }
}

// ÂàùÂßãÊõ¥Êñ∞‰∏ÄÊ¨°Êî∂ËóèÂ§πÂàóË°®
updateFavoritesList();

// JavaScript‰ª£Á†Å
function goToFavoritePage() {
    window.location.href = 'favorite.html';
}


